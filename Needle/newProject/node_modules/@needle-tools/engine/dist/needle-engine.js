import { GameObject as r, VERSION as a, Context as s, NeedleXRSession as l, loadSync as d, onStart as c, onUpdate as m, onBeforeRender as p, onAfterRender as g, onInitialized as u, onDestroy as S, onClear as C, Component as y, Components as E } from "./needle-engine.bundle.js";
import { $physicsKey as I, ActionBuilder as M, ActionCollection as D, ActionModel as O, Addressables as x, AlignmentConstraint as L, AmbientMode as k, Animation as N, AnimationCurve as B, AnimationExtension as F, AnimationTrackHandler as G, AnimationUtils as U, Animator as w, AnimatorConditionMode as W, AnimatorController as H, AnimatorControllerParameterType as X, AnimatorStateInfo as z, Antialiasing as V, Application as _, ApplicationEvents as j, AssetDatabase as K, AssetReference as Z, AudioExtension as Q, AudioListener as Y, AudioSource as $, AudioTrackHandler as J, Avatar as q, AvatarBlink_Simple as ee, AvatarEyeLook_Rotation as te, AvatarLoader as oe, AvatarMarker as re, AvatarModel as ne, Avatar_Brain_LookAt as ie, Avatar_MouthShapes as ae, Avatar_MustacheShake as se, Avatar_POI as le, Axes as de, AxesHelper as ce, BUILD_TIME as me, BaseUIComponent as pe, BasicIKConstraint as ge, BehaviorExtension as ue, BehaviorModel as Se, Component$1 as Ce, BlobStorage as ye, BloomEffect as Ee, BoxCollider as Re, BoxGizmo as he, BoxHelperComponent as fe, Button as ve, ButtonsFactory as Pe, CallDirection as Te, CallInfo as Ae, Camera as be, CameraTargetReachedEvent as Ie, Canvas as Me, CanvasGroup as De, CapsuleCollider as Oe, ChangeMaterialOnClick as xe, ChangeTransformOnClick as Le, CharacterController as ke, CharacterControllerInput as Ne, ChromaticAberration as Be, CircularBuffer as Fe, ClearFlags as Ge, ClipExtrapolation as Ue, Collider as we, Collision as We, CollisionDetectionMode as He, ColorAdjustments as Xe, ColorBySpeedModule as ze, ColorOverLifetimeModule as Ve, Component$1 as _e, ComponentLifecycleEvents as je, ConnectionEvents as Ke, ContactPoint as Ze, ContactShadows as Qe, ContextArgs as Ye, ContextEvent as $e, ContextRegistry as Je, ControlTrackHandler as qe, CustomBranding as et, CustomShader as tt, DefaultReflectionMode as ot, Deletable as rt, DeleteBox as nt, DepthOfField as it, DeviceFlag as at, DeviceUtilities as st, DocumentExtension as lt, DragControls as dt, DragMode as ct, DropListener as mt, Duplicatable as pt, EffectWrapper as gt, EmissionModule as ut, EmphasizeOnClick as St, EngineLoadingView as Ct, EventList as yt, EventListEvent as Et, EventSystem as Rt, EventTrigger as ht, FieldWithDefault as ft, FileReference as vt, FileReferenceSerializer as Pt, FileSpawnModel as Tt, File_Event as At, FixedJoint as bt, Fog as It, FrameEvent as Mt, GENERATOR as Dt, Gizmos as Ot, GltfExport as xt, GltfExportBox as Lt, GltfLoadEvent as kt, GltfLoadEventType as Nt, Gradient as Bt, Graphic as Ft, GraphicRaycaster as Gt, Graphics as Ut, GridHelper as wt, GridLayoutGroup as Wt, GroundProjectedEnv as Ht, GroupActionModel as Xt, HideFlags as zt, HideOnStart as Vt, HingeJoint as _t, HorizontalLayoutGroup as jt, HostData as Kt, Image as Zt, ImageReference as Qt, ImageReferenceSerializer as Yt, InheritVelocityModule as $t, Input as Jt, InputEventQueue as qt, InputEvents as eo, InputField as to, InstanceHandle as oo, InstancingHandler as ro, InstancingUtil as no, InstantiateEvent as io, InstantiateIdProvider as ao, InstantiateOptions as so, Interactable as lo, InternalScreenshotUtils as co, JoinedRoomResponse as mo, KeyEventArgs as po, Keyframe as go, LODGroup as uo, LODModel as So, LeftRoomResponse as Co, Light as yo, LightData as Eo, LimitVelocityOverLifetimeModule as Ro, LoadingElementOptions as ho, LogStats as fo, LogType as vo, LookAt as Po, LookAtConstraint as To, MainModule as Ao, MarkerType as bo, MaskableGraphic as Io, Mathf as Mo, MeshCollider as Do, MeshRenderer as Oo, MinMaxCurve as xo, MinMaxGradient as Lo, MODULES as ko, NEKeyboardEvent as No, NEPointerEvent as Bo, NeedleButtonElement as Fo, ContextRegistry as Go, NeedleEngineHTMLElement as Uo, NeedleLoader as wo, NeedleMenu as Wo, NeedlePatchesKey as Ho, USDZExporter$1 as Xo, NeedleXRController as zo, NeedleXRSync as Vo, NeedleXRUtils as _o, NestedGltf as jo, NetworkConnection as Ko, NetworkedStreamEvents as Zo, NetworkedStreams as Qo, Networking as Yo, NewInstanceModel as $o, NoiseModule as Jo, ObjectRaycaster as qo, ObjectUtils as er, OffsetConstraint as tr, OneEuroFilter as or, OneEuroFilterXYZ as rr, OpenURL as nr, OrbitControls as ir, Outline as ar, OwnershipEvent as sr, OwnershipModel as lr, PUBLIC_KEY as dr, Padding as cr, ParticleBurst as mr, ParticleSubEmitter as pr, ParticleSystem as gr, ParticleSystemBaseBehaviour as ur, ParticleSystemRenderer as Sr, ParticleSystemShapeType as Cr, PeerHandle as yr, PeerNetworking as Er, Physics as Rr, PhysicsExtension as hr, PhysicsMaterialCombine as fr, PixelationEffect as vr, PlayAnimationOnClick as Pr, PlayAudioOnClick as Tr, PlayableDirector as Ar, PlayerColor as br, PlayerState as Ir, PlayerStateEvent as Mr, PlayerSync as Dr, PlayerView as Or, PlayerViewManager as xr, PointerEventData as Lr, PointerType as kr, PostProcessingEffect as Nr, PostProcessingHandler as Br, Volume as Fr, PreliminaryAction as Gr, PreliminaryTrigger as Ur, PreviewHelper as wr, PrimitiveType as Wr, Progress as Hr, PromiseAllWithErrors as Xr, PromiseErrorResult as zr, RGBAColor as Vr, RapierPhysics as _r, RawImage as jr, RaycastOptions as Kr, Rect as Zr, RectTransform as Qr, ReflectionProbe as Yr, RegisteredAnimationInfo as $r, RemoteSkybox as Jr, RenderTexture as qr, RenderTextureSerializer as en, Renderer as tn, RendererData as on, RendererLightmap as rn, Rigidbody as nn, RigidbodyConstraints as an, RoomEvents as sn, RotationBySpeedModule as ln, RotationOverLifetimeModule as dn, SceneLightSettings as cn, SceneSwitcher as mn, ScreenCapture as pn, ScreenSpaceAmbientOcclusion as gn, ScreenSpaceAmbientOcclusionN8 as un, SendQueue as Sn, SerializationContext as Cn, SetActiveOnClick as yn, ShadowCatcher as En, ShapeModule as Rn, SharpeningEffect as hn, SignalAsset as fn, SignalReceiver as vn, SignalReceiverEvent as Pn, SignalTrackHandler as Tn, Size as An, SizeBySpeedModule as bn, SizeOverLifetimeModule as In, SkinnedMeshRenderer as Mn, SmoothFollow as Dn, SpatialGrabRaycaster as On, SpatialHtml as xn, SpatialTrigger as Ln, SpatialTriggerReceiver as kn, SpectatorCamera as Nn, SphereCollider as Bn, SphereIntersection as Fn, SphereOverlapResult as Gn, Sprite as Un, SpriteData as wn, SpriteRenderer as Wn, SpriteSheet as Hn, StateMachineBehaviour as Xn, StreamEndedEvent as zn, StreamReceivedEvent as Vn, SubEmitterSystem as _n, SyncedCamera as jn, SyncedRoom as Kn, SyncedTransform as Zn, TapGestureTrigger as Qn, TeleportTarget as Yn, TestRunner as $n, TestSceneUtils as Jn, TestSimulateUserData as qn, Text as ei, TextBuilder as ti, TextExtension as oi, TextureSheetAnimationModule as ri, TiltShiftEffect as ni, Time as ii, ToneMappingEffect as ai, TrackHandler as si, TrackType as li, TrailModule as di, TransformData as ci, TransformGizmo as mi, TriggerBuilder as pi, TriggerModel as gi, TypeStore as ui, UIRaycastUtils as Si, UIRootComponent as Ci, USDDocument as yi, USDObject as Ei, USDWriter as Ri, USDZExporter as hi, USDZText as fi, USDZUIExtension as vi, UriSerializer as Pi, UsageMarker as Ti, UserJoinedOrLeftRoomModel as Ai, VariantAction as bi, VelocityOverLifetimeModule as Ii, VerticalLayoutGroup as Mi, VideoPlayer as Di, ViewDevice as Oi, Vignette as xi, VisibilityAction as Li, Voip as ki, Volume as Ni, VolumeParameter as Bi, VolumeProfile as Fi, WaitForFrames as Gi, WaitForPromise as Ui, WaitForSeconds as wi, Watch as Wi, WebARCameraBackground as Hi, WebARSessionRoot as Xi, WebXR as zi, WebXRButtonFactory as Vi, WebXRImageTracking as _i, WebXRImageTrackingModel as ji, WebXRPlaneTracking as Ki, WebXRTrackedImage as Zi, XRControllerFollow as Qi, XRControllerModel as Yi, XRControllerMovement as $i, XRFlag as Ji, XRRig as qi, XRState as ea, XRStateFlag as ta, __Ignore as oa, __internalNotifyObjectDestroyed as ra, activeInHierarchyFieldName as na, addAttributeChangeCallback as ia, addComponent as aa, addCustomExtensionPlugin as sa, addGltfLoadEventListener as la, addNewComponent as da, addPatch as ca, apply as ma, applyHMRChanges as pa, applyPrototypeExtensions as ga, beginListenDestroy as ua, beginListenInstantiate as Sa, binaryIdentifierCasts as Ca, build_scene_functions as ya, builtinComponentKeyName as Ea, calculateProgress01 as Ra, clearMessages as ha, clearMessages as fa, colorSerializer as va, compareAssociation as Pa, componentSerializer as Ta, copyTexture as Aa, createLoader as ba, createMotion as Ia, debugNet as Ma, debugOwner as Da, decompressGpuTexture as Oa, deepClone as xa, delay as La, delayForFrames as ka, deserializeObject as Na, destroy as Ba, destroyComponentInstance as Fa, disposeObjectResources as Ga, disposeStream as Ua, editorGuidKeyName as wa, enableSpatialConsole as Wa, euler as Ha, eventListSerializer as Xa, exportAsGLTF as za, findByGuid as Va, findObjectOfType as _a, findObjectsOfType as ja, findResourceUsers as Ka, fitObjectIntoVolume as Za, foreachComponent as Qa, foreachComponentEnumerator as Ya, forward as $a, generateQRCode as Ja, generateSeed as qa, getBoundingBox as es, getCameraController as ts, getComponent as os, getComponentInChildren as rs, getComponentInParent as ns, getComponents as is, getComponentsInChildren as as, getComponentsInParent as ss, getFormattedDate as ls, getIconElement as ds, getIconTexture as cs, getIp as ms, getIpAndLocation as ps, getIpCloudflare as gs, getLoader as us, getOrAddComponent as Ss, getParam as Cs, getParentHierarchyPath as ys, getPath as Es, getPeerOptions as Rs, getPeerjsInstance as hs, getResourceUserCount as fs, getTempColor as vs, getTempQuaternion as Ps, getTempVector as Ts, getUrlParams as As, getVisibleInCustomShadowRendering as bs, getWorldDirection as Is, getWorldEuler as Ms, getWorldPosition as Ds, getWorldQuaternion as Os, getWorldRotation as xs, getWorldScale as Ls, hasCommercialLicense as ks, hasIndieLicense as Ns, hasPointerEventComponent as Bs, hasProLicense as Fs, hideDebugConsole as Gs, imageToCanvas as Us, instantiate as ws, invokeAfterImportPluginHooks as Ws, invokeXRSessionEnd as Hs, invokeXRSessionStart as Xs, isActiveInHierarchy as zs, isActiveSelf as Vs, isAndroidDevice as _s, isAnimationAction as js, isComponent as Ks, isDebugMode as Zs, isDesktop as Qs, isDestroyed as Ys, isDevEnvironment as $s, isDisposed as Js, isExporting as qs, isHostedOnGlitch as el, isHotReloading as tl, isIPad as ol, isIconElement as rl, isLocalNetwork as nl, isMacOS as il, isMobileDevice as al, isMozillaXR as sl, isQuest as ll, isResourceTrackingEnabled as dl, isSafari as cl, isUsingInstancing as ml, isiOS as pl, isiPad as gl, logHierarchy as ul, lookAtInverse as Sl, lookAtObject as Cl, lookAtScreenPoint as yl, makeId as El, makeIdFromRandomWords as Rl, makeNameSafe as hl, markAsInstancedRendered as fl, microphonePermissionsGranted as vl, nameof as Pl, nameofFactory as Tl, objectSerializer as Al, offXRSessionEnd as bl, offXRSessionStart as Il, onXRSessionEnd as Ml, onXRSessionStart as Dl, parseSync as Ol, placeOnSurface as xl, postprocessFBXMaterials as Ll, prefix as kl, pushState as Nl, randomNumber as Bl, registerBinaryType as Fl, registerComponent as Gl, registerComponentExtension as Ul, registerCustomEffectType as wl, registerExportExtensions as Wl, registerExtensions as Hl, registerHotReloadType as Xl, registerLoader as zl, registerPrefabProvider as Vl, registerPrototypeExtensions as _l, registerType as jl, relativePathPrefix as Kl, removeAttributeChangeCallback as Zl, removeComponent as Ql, removeCustomImportExtensionType as Yl, removeGltfLoadEventListener as $l, removePatch as Jl, resolveUrl as ql, sanitizeString as ed, saveImage as td, screenshot as od, screenshot2 as rd, sendDestroyed as nd, serializable as id, serializeObject as ad, serializeable as sd, setActive as ld, setAllowBalloonMessages as dd, setAllowOverlayMessages as cd, setAutoFitEnabled as md, setCameraController as pd, setDestroyed as gd, setDevEnvironment as ud, setDisposable as Sd, setDontDestroy as Cd, setOrAddParamsToUrl as yd, setParam as Ed, setParamWithoutReload as Rd, setPeerOptions as hd, setResourceTrackingEnabled as fd, setState as vd, setVisibleInCustomShadowRendering as Pd, setWorldEuler as Td, setWorldPosition as Ad, setWorldPositionXYZ as bd, setWorldQuaternion as Id, setWorldQuaternionXYZW as Md, setWorldRotation as Dd, setWorldRotationXYZ as Od, setWorldScale as xd, showBalloonError as Ld, showBalloonMessage as kd, showBalloonWarning as Nd, showDebugConsole as Bd, slerp as Fd, syncDestroy as Gd, syncField as Ud, syncInstantiate as wd, textureToCanvas as Wd, tryCastBinary as Hd, tryDetermineFileTypeFromBinary as Xd, tryDetermineFileTypeFromURL as zd, tryFindObject as Vd, tryGetGuid as _d, unregisterHotReloadType as jd, unwatchWrite as Kd, useForAutoFit as Zd, validate as Qd, watchWrite as Yd } from "./needle-engine.bundle.js";
import { NEEDLE_progressive as Jd } from "./gltf-progressive.js";
import { THREE as R } from "./three.js";
import "./three-examples.js";
import "./vendor.js";
import "./three-mesh-ui.js";
const t = {
  VERSION: a,
  Context: s,
  NeedleXRSession: l,
  gltf: {
    loadFromURL: d
  },
  onStart: c,
  onUpdate: m,
  onBeforeRender: p,
  onAfterRender: g,
  onInitializedContext: u,
  onDestroyContext: S,
  onClearContext: C
};
var n;
((n = globalThis.Needle) == null ? void 0 : n.VERSION) !== void 0 && console.warn(`Needle Engine is already imported: ${globalThis.Needle.VERSION}`);
function i(e) {
  for (const o in e)
    t[o] = e[o];
}
i(y);
i(E);
for (const e of Object.getOwnPropertyNames(r))
  switch (e) {
    case "prototype":
    case "constructor":
    case "length":
    case "name":
      continue;
    default:
      t[e] = r[e];
      break;
  }
if (!globalThis.Needle)
  globalThis.Needle = t;
else
  for (const e in t)
    globalThis.Needle[e] = t[e];
globalThis.THREE ? console.warn("Three.js is already imported") : globalThis.THREE = R;
export {
  I as $physicsKey,
  M as ActionBuilder,
  D as ActionCollection,
  O as ActionModel,
  x as Addressables,
  L as AlignmentConstraint,
  k as AmbientMode,
  N as Animation,
  B as AnimationCurve,
  F as AnimationExtension,
  G as AnimationTrackHandler,
  U as AnimationUtils,
  w as Animator,
  W as AnimatorConditionMode,
  H as AnimatorController,
  X as AnimatorControllerParameterType,
  z as AnimatorStateInfo,
  V as Antialiasing,
  _ as Application,
  j as ApplicationEvents,
  K as AssetDatabase,
  Z as AssetReference,
  Q as AudioExtension,
  Y as AudioListener,
  $ as AudioSource,
  J as AudioTrackHandler,
  q as Avatar,
  ee as AvatarBlink_Simple,
  te as AvatarEyeLook_Rotation,
  oe as AvatarLoader,
  re as AvatarMarker,
  ne as AvatarModel,
  ie as Avatar_Brain_LookAt,
  ae as Avatar_MouthShapes,
  se as Avatar_MustacheShake,
  le as Avatar_POI,
  de as Axes,
  ce as AxesHelper,
  me as BUILD_TIME,
  pe as BaseUIComponent,
  ge as BasicIKConstraint,
  ue as BehaviorExtension,
  Se as BehaviorModel,
  Ce as Behaviour,
  ye as BlobStorage,
  Ee as BloomEffect,
  Re as BoxCollider,
  he as BoxGizmo,
  fe as BoxHelperComponent,
  ve as Button,
  Pe as ButtonsFactory,
  Te as CallDirection,
  Ae as CallInfo,
  be as Camera,
  Ie as CameraTargetReachedEvent,
  Me as Canvas,
  De as CanvasGroup,
  Oe as CapsuleCollider,
  xe as ChangeMaterialOnClick,
  Le as ChangeTransformOnClick,
  ke as CharacterController,
  Ne as CharacterControllerInput,
  Be as ChromaticAberration,
  Fe as CircularBuffer,
  Ge as ClearFlags,
  Ue as ClipExtrapolation,
  we as Collider,
  We as Collision,
  He as CollisionDetectionMode,
  Xe as ColorAdjustments,
  ze as ColorBySpeedModule,
  Ve as ColorOverLifetimeModule,
  _e as Component,
  je as ComponentLifecycleEvents,
  Ke as ConnectionEvents,
  Ze as ContactPoint,
  Qe as ContactShadows,
  s as Context,
  Ye as ContextArgs,
  $e as ContextEvent,
  Je as ContextRegistry,
  qe as ControlTrackHandler,
  et as CustomBranding,
  tt as CustomShader,
  ot as DefaultReflectionMode,
  rt as Deletable,
  nt as DeleteBox,
  it as DepthOfField,
  at as DeviceFlag,
  st as DeviceUtilities,
  lt as DocumentExtension,
  dt as DragControls,
  ct as DragMode,
  mt as DropListener,
  pt as Duplicatable,
  gt as EffectWrapper,
  ut as EmissionModule,
  St as EmphasizeOnClick,
  Ct as EngineLoadingView,
  yt as EventList,
  Et as EventListEvent,
  Rt as EventSystem,
  ht as EventTrigger,
  ft as FieldWithDefault,
  vt as FileReference,
  Pt as FileReferenceSerializer,
  Tt as FileSpawnModel,
  At as File_Event,
  bt as FixedJoint,
  It as Fog,
  Mt as FrameEvent,
  Dt as GENERATOR,
  r as GameObject,
  Ot as Gizmos,
  xt as GltfExport,
  Lt as GltfExportBox,
  kt as GltfLoadEvent,
  Nt as GltfLoadEventType,
  Bt as Gradient,
  Ft as Graphic,
  Gt as GraphicRaycaster,
  Ut as Graphics,
  wt as GridHelper,
  Wt as GridLayoutGroup,
  Ht as GroundProjectedEnv,
  Xt as GroupActionModel,
  zt as HideFlags,
  Vt as HideOnStart,
  _t as HingeJoint,
  jt as HorizontalLayoutGroup,
  Kt as HostData,
  Zt as Image,
  Qt as ImageReference,
  Yt as ImageReferenceSerializer,
  $t as InheritVelocityModule,
  Jt as Input,
  qt as InputEventQueue,
  eo as InputEvents,
  to as InputField,
  oo as InstanceHandle,
  ro as InstancingHandler,
  no as InstancingUtil,
  io as InstantiateEvent,
  ao as InstantiateIdProvider,
  so as InstantiateOptions,
  lo as Interactable,
  co as InternalScreenshotUtils,
  mo as JoinedRoomResponse,
  po as KeyEventArgs,
  go as Keyframe,
  uo as LODGroup,
  So as LODModel,
  Co as LeftRoomResponse,
  yo as Light,
  Eo as LightData,
  Ro as LimitVelocityOverLifetimeModule,
  ho as LoadingElementOptions,
  fo as LogStats,
  vo as LogType,
  Po as LookAt,
  To as LookAtConstraint,
  Ao as MainModule,
  bo as MarkerType,
  Io as MaskableGraphic,
  Mo as Mathf,
  Do as MeshCollider,
  Oo as MeshRenderer,
  xo as MinMaxCurve,
  Lo as MinMaxGradient,
  ko as NEEDLE_ENGINE_MODULES,
  Jd as NEEDLE_progressive,
  No as NEKeyboardEvent,
  Bo as NEPointerEvent,
  Fo as NeedleButtonElement,
  Go as NeedleEngine,
  Uo as NeedleEngineHTMLElement,
  wo as NeedleLoader,
  Wo as NeedleMenu,
  Ho as NeedlePatchesKey,
  Xo as NeedleUSDZExporter,
  zo as NeedleXRController,
  l as NeedleXRSession,
  Vo as NeedleXRSync,
  _o as NeedleXRUtils,
  jo as NestedGltf,
  Ko as NetworkConnection,
  Zo as NetworkedStreamEvents,
  Qo as NetworkedStreams,
  Yo as Networking,
  $o as NewInstanceModel,
  Jo as NoiseModule,
  qo as ObjectRaycaster,
  er as ObjectUtils,
  tr as OffsetConstraint,
  or as OneEuroFilter,
  rr as OneEuroFilterXYZ,
  nr as OpenURL,
  ir as OrbitControls,
  ar as Outline,
  sr as OwnershipEvent,
  lr as OwnershipModel,
  dr as PUBLIC_KEY,
  cr as Padding,
  mr as ParticleBurst,
  pr as ParticleSubEmitter,
  gr as ParticleSystem,
  ur as ParticleSystemBaseBehaviour,
  Sr as ParticleSystemRenderer,
  Cr as ParticleSystemShapeType,
  yr as PeerHandle,
  Er as PeerNetworking,
  Rr as Physics,
  hr as PhysicsExtension,
  fr as PhysicsMaterialCombine,
  vr as PixelationEffect,
  Pr as PlayAnimationOnClick,
  Tr as PlayAudioOnClick,
  Ar as PlayableDirector,
  br as PlayerColor,
  Ir as PlayerState,
  Mr as PlayerStateEvent,
  Dr as PlayerSync,
  Or as PlayerView,
  xr as PlayerViewManager,
  Lr as PointerEventData,
  kr as PointerType,
  Nr as PostProcessingEffect,
  Br as PostProcessingHandler,
  Fr as PostProcessingManager,
  Gr as PreliminaryAction,
  Ur as PreliminaryTrigger,
  wr as PreviewHelper,
  Wr as PrimitiveType,
  Hr as Progress,
  Xr as PromiseAllWithErrors,
  zr as PromiseErrorResult,
  Vr as RGBAColor,
  _r as RapierPhysics,
  jr as RawImage,
  Kr as RaycastOptions,
  Zr as Rect,
  Qr as RectTransform,
  Yr as ReflectionProbe,
  $r as RegisteredAnimationInfo,
  Jr as RemoteSkybox,
  qr as RenderTexture,
  en as RenderTextureSerializer,
  tn as Renderer,
  on as RendererData,
  rn as RendererLightmap,
  nn as Rigidbody,
  an as RigidbodyConstraints,
  sn as RoomEvents,
  ln as RotationBySpeedModule,
  dn as RotationOverLifetimeModule,
  cn as SceneLightSettings,
  mn as SceneSwitcher,
  pn as ScreenCapture,
  gn as ScreenSpaceAmbientOcclusion,
  un as ScreenSpaceAmbientOcclusionN8,
  Sn as SendQueue,
  Cn as SerializationContext,
  yn as SetActiveOnClick,
  En as ShadowCatcher,
  Rn as ShapeModule,
  hn as SharpeningEffect,
  fn as SignalAsset,
  vn as SignalReceiver,
  Pn as SignalReceiverEvent,
  Tn as SignalTrackHandler,
  An as Size,
  bn as SizeBySpeedModule,
  In as SizeOverLifetimeModule,
  Mn as SkinnedMeshRenderer,
  Dn as SmoothFollow,
  On as SpatialGrabRaycaster,
  xn as SpatialHtml,
  Ln as SpatialTrigger,
  kn as SpatialTriggerReceiver,
  Nn as SpectatorCamera,
  Bn as SphereCollider,
  Fn as SphereIntersection,
  Gn as SphereOverlapResult,
  Un as Sprite,
  wn as SpriteData,
  Wn as SpriteRenderer,
  Hn as SpriteSheet,
  Xn as StateMachineBehaviour,
  zn as StreamEndedEvent,
  Vn as StreamReceivedEvent,
  _n as SubEmitterSystem,
  jn as SyncedCamera,
  Kn as SyncedRoom,
  Zn as SyncedTransform,
  Qn as TapGestureTrigger,
  Yn as TeleportTarget,
  $n as TestRunner,
  Jn as TestSceneUtils,
  qn as TestSimulateUserData,
  ei as Text,
  ti as TextBuilder,
  oi as TextExtension,
  ri as TextureSheetAnimationModule,
  ni as TiltShiftEffect,
  ii as Time,
  ai as ToneMappingEffect,
  si as TrackHandler,
  li as TrackType,
  di as TrailModule,
  ci as TransformData,
  mi as TransformGizmo,
  pi as TriggerBuilder,
  gi as TriggerModel,
  ui as TypeStore,
  Si as UIRaycastUtils,
  Ci as UIRootComponent,
  yi as USDDocument,
  Ei as USDObject,
  Ri as USDWriter,
  hi as USDZExporter,
  fi as USDZText,
  vi as USDZUIExtension,
  Pi as UriSerializer,
  Ti as UsageMarker,
  Ai as UserJoinedOrLeftRoomModel,
  a as VERSION,
  bi as VariantAction,
  Ii as VelocityOverLifetimeModule,
  Mi as VerticalLayoutGroup,
  Di as VideoPlayer,
  Oi as ViewDevice,
  xi as Vignette,
  Li as VisibilityAction,
  ki as Voip,
  Ni as Volume,
  Bi as VolumeParameter,
  Fi as VolumeProfile,
  Gi as WaitForFrames,
  Ui as WaitForPromise,
  wi as WaitForSeconds,
  Wi as Watch,
  Hi as WebARCameraBackground,
  Xi as WebARSessionRoot,
  zi as WebXR,
  Vi as WebXRButtonFactory,
  _i as WebXRImageTracking,
  ji as WebXRImageTrackingModel,
  Ki as WebXRPlaneTracking,
  Zi as WebXRTrackedImage,
  Qi as XRControllerFollow,
  Yi as XRControllerModel,
  $i as XRControllerMovement,
  Ji as XRFlag,
  qi as XRRig,
  ea as XRState,
  ta as XRStateFlag,
  oa as __Ignore,
  ra as __internalNotifyObjectDestroyed,
  na as activeInHierarchyFieldName,
  ia as addAttributeChangeCallback,
  aa as addComponent,
  sa as addCustomExtensionPlugin,
  la as addGltfLoadEventListener,
  da as addNewComponent,
  ca as addPatch,
  ma as apply,
  pa as applyHMRChanges,
  ga as applyPrototypeExtensions,
  ua as beginListenDestroy,
  Sa as beginListenInstantiate,
  Ca as binaryIdentifierCasts,
  ya as build_scene_functions,
  Ea as builtinComponentKeyName,
  Ra as calculateProgress01,
  ha as clearBalloonMessages,
  fa as clearOverlayMessages,
  va as colorSerializer,
  Pa as compareAssociation,
  Ta as componentSerializer,
  Aa as copyTexture,
  ba as createLoader,
  Ia as createMotion,
  Ma as debugNet,
  Da as debugOwner,
  Oa as decompressGpuTexture,
  xa as deepClone,
  La as delay,
  ka as delayForFrames,
  Na as deserializeObject,
  Ba as destroy,
  Fa as destroyComponentInstance,
  Ga as disposeObjectResources,
  Ua as disposeStream,
  wa as editorGuidKeyName,
  Wa as enableSpatialConsole,
  Ha as euler,
  Xa as eventListSerializer,
  za as exportAsGLTF,
  Va as findByGuid,
  _a as findObjectOfType,
  ja as findObjectsOfType,
  Ka as findResourceUsers,
  Za as fitObjectIntoVolume,
  Qa as foreachComponent,
  Ya as foreachComponentEnumerator,
  $a as forward,
  Ja as generateQRCode,
  qa as generateSeed,
  es as getBoundingBox,
  ts as getCameraController,
  os as getComponent,
  rs as getComponentInChildren,
  ns as getComponentInParent,
  is as getComponents,
  as as getComponentsInChildren,
  ss as getComponentsInParent,
  ls as getFormattedDate,
  ds as getIconElement,
  cs as getIconTexture,
  ms as getIp,
  ps as getIpAndLocation,
  gs as getIpCloudflare,
  us as getLoader,
  Ss as getOrAddComponent,
  Cs as getParam,
  ys as getParentHierarchyPath,
  Es as getPath,
  Rs as getPeerOptions,
  hs as getPeerjsInstance,
  fs as getResourceUserCount,
  vs as getTempColor,
  Ps as getTempQuaternion,
  Ts as getTempVector,
  As as getUrlParams,
  bs as getVisibleInCustomShadowRendering,
  Is as getWorldDirection,
  Ms as getWorldEuler,
  Ds as getWorldPosition,
  Os as getWorldQuaternion,
  xs as getWorldRotation,
  Ls as getWorldScale,
  ks as hasCommercialLicense,
  Ns as hasIndieLicense,
  Bs as hasPointerEventComponent,
  Fs as hasProLicense,
  Gs as hideDebugConsole,
  Us as imageToCanvas,
  ws as instantiate,
  Ws as invokeAfterImportPluginHooks,
  Hs as invokeXRSessionEnd,
  Xs as invokeXRSessionStart,
  zs as isActiveInHierarchy,
  Vs as isActiveSelf,
  _s as isAndroidDevice,
  js as isAnimationAction,
  Ks as isComponent,
  Zs as isDebugMode,
  Qs as isDesktop,
  Ys as isDestroyed,
  $s as isDevEnvironment,
  Js as isDisposed,
  qs as isExporting,
  el as isHostedOnGlitch,
  tl as isHotReloading,
  ol as isIPad,
  rl as isIconElement,
  nl as isLocalNetwork,
  il as isMacOS,
  al as isMobileDevice,
  sl as isMozillaXR,
  ll as isQuest,
  dl as isResourceTrackingEnabled,
  cl as isSafari,
  ml as isUsingInstancing,
  pl as isiOS,
  gl as isiPad,
  d as loadSync,
  ul as logHierarchy,
  Sl as lookAtInverse,
  Cl as lookAtObject,
  yl as lookAtScreenPoint,
  El as makeId,
  Rl as makeIdFromRandomWords,
  hl as makeNameSafeForUSD,
  fl as markAsInstancedRendered,
  vl as microphonePermissionsGranted,
  Pl as nameof,
  Tl as nameofFactory,
  Al as objectSerializer,
  bl as offXRSessionEnd,
  Il as offXRSessionStart,
  g as onAfterRender,
  p as onBeforeRender,
  C as onClear,
  S as onDestroy,
  u as onInitialized,
  c as onStart,
  m as onUpdate,
  Ml as onXRSessionEnd,
  Dl as onXRSessionStart,
  Ol as parseSync,
  xl as placeOnSurface,
  Ll as postprocessFBXMaterials,
  kl as prefix,
  Nl as pushState,
  Bl as randomNumber,
  Fl as registerBinaryType,
  Gl as registerComponent,
  Ul as registerComponentExtension,
  wl as registerCustomEffectType,
  Wl as registerExportExtensions,
  Hl as registerExtensions,
  Xl as registerHotReloadType,
  zl as registerLoader,
  Vl as registerPrefabProvider,
  _l as registerPrototypeExtensions,
  jl as registerType,
  Kl as relativePathPrefix,
  Zl as removeAttributeChangeCallback,
  Ql as removeComponent,
  Yl as removeCustomImportExtensionType,
  $l as removeGltfLoadEventListener,
  Jl as removePatch,
  ql as resolveUrl,
  ed as sanitizeString,
  td as saveImage,
  od as screenshot,
  rd as screenshot2,
  nd as sendDestroyed,
  id as serializable,
  ad as serializeObject,
  sd as serializeable,
  ld as setActive,
  dd as setAllowBalloonMessages,
  cd as setAllowOverlayMessages,
  md as setAutoFitEnabled,
  pd as setCameraController,
  gd as setDestroyed,
  ud as setDevEnvironment,
  Sd as setDisposable,
  Cd as setDontDestroy,
  yd as setOrAddParamsToUrl,
  Ed as setParam,
  Rd as setParamWithoutReload,
  hd as setPeerOptions,
  fd as setResourceTrackingEnabled,
  vd as setState,
  Pd as setVisibleInCustomShadowRendering,
  Td as setWorldEuler,
  Ad as setWorldPosition,
  bd as setWorldPositionXYZ,
  Id as setWorldQuaternion,
  Md as setWorldQuaternionXYZW,
  Dd as setWorldRotation,
  Od as setWorldRotationXYZ,
  xd as setWorldScale,
  Ld as showBalloonError,
  kd as showBalloonMessage,
  Nd as showBalloonWarning,
  Bd as showDebugConsole,
  Fd as slerp,
  Gd as syncDestroy,
  Ud as syncField,
  wd as syncInstantiate,
  Wd as textureToCanvas,
  Hd as tryCastBinary,
  Xd as tryDetermineFileTypeFromBinary,
  zd as tryDetermineFileTypeFromURL,
  Vd as tryFindObject,
  _d as tryGetGuid,
  jd as unregisterHotReloadType,
  Kd as unwatchWrite,
  Zd as useForAutoFit,
  Qd as validate,
  Yd as watchWrite
};
